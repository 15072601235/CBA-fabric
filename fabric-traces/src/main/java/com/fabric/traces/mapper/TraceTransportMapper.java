package com.fabric.traces.mapper;

import com.fabric.common.annotation.DataSource;
import com.fabric.common.enums.DataSourceType;
import com.fabric.traces.domain.TraceTransport;
import com.fabric.traces.domain.vo.CropsVo;

import java.util.List;
import static com.fabric.common.enums.DataSourceType.TRACE;

@DataSource(DataSourceType.TRACE)
public interface TraceTransportMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trace_transport
     *
     * @mbg.generated Tue Nov 03 22:03:31 CST 2020
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trace_transport
     *
     * @mbg.generated Tue Nov 03 22:03:31 CST 2020
     */
    int insert(TraceTransport record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trace_transport
     *
     * @mbg.generated Tue Nov 03 22:03:31 CST 2020
     */
    int insertSelective(TraceTransport record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trace_transport
     *
     * @mbg.generated Tue Nov 03 22:03:31 CST 2020
     */
    TraceTransport selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trace_transport
     *
     * @mbg.generated Tue Nov 03 22:03:31 CST 2020
     */
    int updateByPrimaryKeySelective(TraceTransport record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trace_transport
     *
     * @mbg.generated Tue Nov 03 22:03:31 CST 2020
     */
    int updateByPrimaryKey(TraceTransport record);

    List<TraceTransport> listTransport(String driverId);

    int updateByCropsId(TraceTransport traceTransport);

    List<TraceTransport> listCrops(String deptId);

    int changeInToOut(String cropsId);

    List<CropsVo> queryCropsList(Integer deptId);

    int updateReceiveStatus(TraceTransport traceTransport);
}